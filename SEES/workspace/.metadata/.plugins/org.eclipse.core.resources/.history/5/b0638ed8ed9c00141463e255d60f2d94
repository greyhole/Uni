#include "systemc.h"

#ifndef CONSUMER_H_
#define CONSUMER_H_

SC_MODULE(Consumer){

	sc_in<int> data;
	int readNumber;
	sc_out<int> cFloor;
	sc_vector< sc_in< sc_bv< 1 > > > upList;
	sc_bit etst;

//	SC_CTOR(Consumer){
//		upList.init(4);
//		cFloor.initialize(0);
//		SC_METHOD(consume);
//		sensitive << data;
//	}
	SC_HAS_PROCESS(Consumer);
	Consumer(sc_module_name name_, int size_ = 4):
			sc_module(name_){
		upList.init(4);
		SC_METHOD(consume);
		sensitive << data;
	}

	void consume()
	{
		if(checkList()){
			etst = "1";
		}
		else{
			etst = "0";
			}

		readNumber = data.read();
		cout << "[" << sc_time_stamp() << " / " << sc_delta_count() << "](" << name() << "): read " << readNumber << endl;
		cout << etst << endl;
	}

	bool checkList(){
		uint i;
		for(i = cFloor;i < upList.size();i++){
			if(upList[i].read()== "1"){
				return 1;
			}
		}
		return 0;
	}

	bool checkList(){
		uint i;
		for(i = cFloor;i < upList.size();i++){
			if(upList[i].read()== "1"){
				return 1;
			}
		}
		return 0;
	}
};

#endif
