Benjamin Plewka 754639                                                                SRN Blatt 3
Fritz Meiners 743338                
3.1
1.


Network Address Translation:
Eine Möglichkeit, Rechnernetze mit verschiedenen IP-Adressräumen miteinander zu verbinden.


Basic NAT:
Die einfachste Art NAT, eine 1 zu 1 Konvertierung der entsprechenden IP-Adressen.


Network Address and Port Translation:
Eine 1 zu n Übersetzung. Dies ist Notwendig wenn mehrere IP-Adressen hinter einer einzigen versteckt werden (z.B. mehrere Geräte hinter einem Router).


2.


Source NAT:
Hierbei wird die Quell-IP durch die öffentlich sichtbare IP-Adresse getauscht. Dies kommt zu Einsatz, wenn mehrere Geräte hinter einem Router “versteckt” sind.


Destination NAT:
Auch als Port-Forwarding bekannt. Hierbei wird die Zieladresse in den entsprechenden IP-Paketen abgeändert.


3.2


In der Vorlesung und der Übung ist die im Linux-Kernel integrierte iptables-Firewall
vorgestellt worden. Gegeben sei ein Netzwerk mit der IP-Adresse 192.168.2.0 und
Netzmaske 255.255.255.0, welches über einen Linux-Router am Internet betrieben wird.
Dieser besitzt zwei Schnittstellen: eth1 ist die netzinterne Schnittstelle, eth0 ist mit
dem Internet verbunden.


Folgende Sicherheitsrichtlinien sollen umgesetzt werden:


1. UDP-Pakete auf Port 161 (snmp) aus dem Internet sollen nur vom Host mit der IP-Adresse 10.1.2.3 zugelassen werden.
2. TCP-Trafﬁc von innen nach aussen wird nur für imap, smtp und ssh zugelassen
(Standardports). Dabei ist ein SOURCE NAT zu verwenden.
3. TCP-Pakete aus dem Internet auf Port 80 sollen auf den Rechner 192.168.2.14:8080
weitergeleitet werden. TCP-Pakete aus dem Internet auf Port 22 sollen auf den
Rechner 192.168.2.3:22 weitergeleitet werden.
4. Als Ersatz für den ssh-Zugang aus dem Internet auf den Router ist der Port 2222
vorzusehen.
5. Alle übrigen Verbindungen sollen abgelehnt werden.
zu 5)
iptables -F
iptables -P OUTPUT DROP
iptables -P INPUT DROP
iptables -P FORWARD DROP


zu 1)
iptables -A FORWARD -i eth0 -o eth1 -p UDP -dport 161 -s 10.1.2.3 -j Accept


zu 2)
iptables -A FORWARD -i eth1 -o eth0 -p tcp -dport 993 -m state --state NEW -j Accept
iptables -A FORWARD -i eth1 -o eth0 -p tcp -dport 25 -m state --state NEW -j Accept
iptables -A FORWARD -i eth1 -o eth0 -p tcp -dport 22 -m state --state NEW -j Accept
iptables -t nat -A POSTROUTING -i eth1 -o eth0 -p tcp -dport 993 -j MASQUERADE
iptables -t nat -A POSTROUTING -i eth1 -o eth0 -p tcp -dport 25 -j MASQUERADE
iptables -t nat -A POSTROUTING -i eth1 -o eth0 -p tcp -dport 22 -j MASQUERADE
iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j Accept




zu 3)
iptables -t nat -A PREROUTING -i eth0 -o eth1 -p tcp -dport 80 -j DNAT --to-destination 192.168.2.14 --to-port 8080
iptables -t nat -A PREROUTING -i eth0 -o eth1 -p tcp -dport 22 -j DNAT --to-destination 192.168.2.23 --to-port 22
iptables -t nat -A PREROUTING -i eth0 -o eth1 -d 192.168.2.14 -p tcp -dport 8080 -m state --state NEW -j Accept 
iptables -t nat -A PREROUTING -i eth0 -o eth1 -d 192.168.2.23 -p tcp -dport 22 -m state --state NEW -j Accept 
iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j Accept


zu 4)
iptables -t nat -A PREROUTING -i eth0 -o eth1 -p tcp --dport 2222 -j REDIRECT --to-ports 22
iptables -A INPUT -p tcp --dport 22 -m state --state NEW -j Accept
iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j Accept
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j Accept


3.3


1.
Das Problem ist, dass NAT nur die IP-Header auswertet, und daraus schließt wohin die Pakete gesendet werden sollen, während SIP im payload des Pakets andere Adressen und Ports festlegen kann die sie mit der Gegenseite ausgehandelt hat. Diese werden vom NAT nicht überprüft und könnten deshalb an falsche Adressen/Ports gesendet werden.
2.
There are several techniques to overcome this problem, but no matter how this is done,
the gap between application and NAT has to be closed. This means that (1) the NAT has
to be application aware, (2) the application has to be NAT aware, or (3) a combination of
the former two has to be employed.
→Ziatat aus der Quelle




3.4


IP-Version: 4
IHL: 5x32 = 160 bit
TOS: 00
Total Length: 1400 byte
Identification: 1
flag: 000-> darf zerlegt werden & letzte paket
fragment offset: 1111 1101 1110 1 → 8125
TTL: 255
Protocol: TCP
Header Checksum: 15 6e
Source Adress: 192.168.0.1
Destination Adress: 192.168.0.2
Ende des IP-Headers




3.5


1.)
Nutzdaten Szenario 0: Hallo


2.)         Szenario 1
accept, da RST zurückgesendet wurde
        


        Szenario 2
reject, da Ziel IP nicht erreichbar


        Szenario 3
drop, da Antwort vom icmpv6  kommt